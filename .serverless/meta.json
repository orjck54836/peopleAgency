{
  "/Users/aiden/Downloads/portify/portify/serverless.yml": {
    "versionFramework": "4.18.0",
    "servicePath": "/Users/aiden/Downloads/portify/portify/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "nuxt-nitro",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "region": "ap-northeast-3",
        "runtime": "nodejs18.x",
        "memorySize": 1024,
        "timeout": 15,
        "architecture": "arm64",
        "environment": {
          "NUXT_AWS_REGION": "ap-northeast-3",
          "NUXT_SES_REGION": "ap-northeast-1",
          "NUXT_MAIL_FROM": "aiden@forma-global.com",
          "NUXT_MAIL_TO": "liaiden1213@gmail.com"
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "WebLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/nuxt-nitro-dev-web"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "nuxt-nitro",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nuxt-nitro-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nuxt-nitro-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "nuxt-nitro",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "WebLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-northeast-3-561efd32-c539",
                  "S3Key": "serverless/nuxt-nitro/dev/1755068232921-2025-08-13T06:57:12.921Z/nuxt-nitro.zip"
                },
                "Handler": ".output/server/index.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "nuxt-nitro-dev-web",
                "MemorySize": 1024,
                "Timeout": 15,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "NUXT_AWS_REGION": "ap-northeast-3",
                    "NUXT_SES_REGION": "ap-northeast-1",
                    "NUXT_MAIL_FROM": "aiden@forma-global.com",
                    "NUXT_MAIL_TO": "liaiden1213@gmail.com"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "WebLogGroup"
              ]
            },
            "WebLambdaVersionskx4xi6rwmSi1TyxjaRysYO26ATXPnqGM5SV3atW4Vk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "WebLambdaFunction"
                },
                "CodeSha256": "YnqusQzCOnyzJ2rzjwkOD0ZlwTVQ+mxS5BR6o2JeZT0="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-nuxt-nitro",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "WebLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "WebLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationWeb": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "WebLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteDefault": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "$default",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationWeb"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationWeb"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-ap-northeast-3-561efd32-c539",
              "Export": {
                "Name": "sls-nuxt-nitro-dev-ServerlessDeploymentBucketName"
              }
            },
            "WebLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "WebLambdaVersionskx4xi6rwmSi1TyxjaRysYO26ATXPnqGM5SV3atW4Vk"
              },
              "Export": {
                "Name": "sls-nuxt-nitro-dev-WebLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-nuxt-nitro-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-nuxt-nitro-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "web": {
          "handler": ".output/server/index.handler",
          "events": [
            {
              "httpApi": "*",
              "resolvedMethod": "ANY"
            }
          ],
          "name": "nuxt-nitro-dev-web",
          "package": {},
          "memory": 1024,
          "timeout": 15,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "WebLambdaVersionskx4xi6rwmSi1TyxjaRysYO26ATXPnqGM5SV3atW4Vk"
        }
      },
      "package": {
        "patterns": [
          "!**",
          ".output/server/**"
        ],
        "artifactsS3KeyDirname": "serverless/nuxt-nitro/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-ap-northeast-3-561efd32-c539",
        "artifact": "/Users/aiden/Downloads/portify/portify/.serverless/nuxt-nitro.zip",
        "artifactDirectoryName": "serverless/nuxt-nitro/dev/1755068232921-2025-08-13T06:57:12.921Z"
      }
    },
    "provider": {
      "name": "aws",
      "region": "ap-northeast-3",
      "runtime": "nodejs18.x",
      "memorySize": 1024,
      "timeout": 15,
      "architecture": "arm64",
      "environment": {
        "NUXT_AWS_REGION": "ap-northeast-3",
        "NUXT_SES_REGION": "ap-northeast-1",
        "NUXT_MAIL_FROM": "aiden@forma-global.com",
        "NUXT_MAIL_TO": "liaiden1213@gmail.com"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "WebLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/nuxt-nitro-dev-web"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "nuxt-nitro",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nuxt-nitro-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nuxt-nitro-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "nuxt-nitro",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "WebLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-northeast-3-561efd32-c539",
                "S3Key": "serverless/nuxt-nitro/dev/1755068232921-2025-08-13T06:57:12.921Z/nuxt-nitro.zip"
              },
              "Handler": ".output/server/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "nuxt-nitro-dev-web",
              "MemorySize": 1024,
              "Timeout": 15,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "NUXT_AWS_REGION": "ap-northeast-3",
                  "NUXT_SES_REGION": "ap-northeast-1",
                  "NUXT_MAIL_FROM": "aiden@forma-global.com",
                  "NUXT_MAIL_TO": "liaiden1213@gmail.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WebLogGroup"
            ]
          },
          "WebLambdaVersionskx4xi6rwmSi1TyxjaRysYO26ATXPnqGM5SV3atW4Vk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebLambdaFunction"
              },
              "CodeSha256": "YnqusQzCOnyzJ2rzjwkOD0ZlwTVQ+mxS5BR6o2JeZT0="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-nuxt-nitro",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "WebLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationWeb": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "WebLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDefault": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "$default",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationWeb"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationWeb"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-ap-northeast-3-561efd32-c539",
            "Export": {
              "Name": "sls-nuxt-nitro-dev-ServerlessDeploymentBucketName"
            }
          },
          "WebLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebLambdaVersionskx4xi6rwmSi1TyxjaRysYO26ATXPnqGM5SV3atW4Vk"
            },
            "Export": {
              "Name": "sls-nuxt-nitro-dev-WebLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-nuxt-nitro-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-nuxt-nitro-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: nuxt-nitro\nframeworkVersion: '4'\n\nprovider:\n  name: aws\n  region: ap-northeast-3\n  runtime: nodejs18.x\n  memorySize: 1024\n  timeout: 15\n  architecture: arm64   # 可選，冷啟更快，與大小無關\n  environment:\n    NUXT_AWS_REGION: ap-northeast-3\n    NUXT_SES_REGION: ap-northeast-1   # ← 若你 SES 在東京，改這裡\n    NUXT_MAIL_FROM: aiden@forma-global.com\n    NUXT_MAIL_TO: liaiden1213@gmail.com\n\nfunctions:\n  web:\n    handler: .output/server/index.handler\n    events:\n      - httpApi: '*'     # HTTP API $default stage\n    # package:\n    #   patterns:\n    #     - '!**'                 # 先排除所有東西（關鍵）\n    #     - '.output/server/**'   # 只塞 Nitro server 產物\n\n# （或放在全域層級也行，二選一）\npackage:\n  patterns:\n    - '!**'\n    - '.output/server/**'\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "323109d0-4108-4b43-806f-71bb89044dc0",
    "orgName": "peopleagency",
    "userId": "zN7MStf1JJm5Ym4WCJ",
    "userName": "peopleagency",
    "serviceProviderAwsAccountId": "593793036921",
    "serviceProviderAwsCfStackName": "nuxt-nitro-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-northeast-3:593793036921:stack/nuxt-nitro-dev/c1c21750-775a-11f0-b94b-06ed4bd6ecc9",
    "serviceProviderAwsCfStackCreated": "2025-08-12T09:00:13.138Z",
    "serviceProviderAwsCfStackUpdated": "2025-08-13T06:55:17.077Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_ROLLBACK_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "WebLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-northeast-3:593793036921:function:nuxt-nitro-dev-web:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-nuxt-nitro-dev-WebLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "pnvcrb6zg0",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-nuxt-nitro-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-northeast-3-561efd32-c539",
        "ExportName": "sls-nuxt-nitro-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://pnvcrb6zg0.execute-api.ap-northeast-3.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-nuxt-nitro-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "WebLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/nuxt-nitro-dev-web"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "nuxt-nitro",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nuxt-nitro-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/nuxt-nitro-dev*:*:*"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "nuxt-nitro",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "WebLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-ap-northeast-3-561efd32-c539",
              "S3Key": "serverless/nuxt-nitro/dev/1755068232921-2025-08-13T06:57:12.921Z/nuxt-nitro.zip"
            },
            "Handler": ".output/server/index.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "nuxt-nitro-dev-web",
            "MemorySize": 1024,
            "Timeout": 15,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "NUXT_AWS_REGION": "ap-northeast-3",
                "NUXT_SES_REGION": "ap-northeast-1",
                "NUXT_MAIL_FROM": "aiden@forma-global.com",
                "NUXT_MAIL_TO": "liaiden1213@gmail.com"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "WebLogGroup"
          ]
        },
        "WebLambdaVersionskx4xi6rwmSi1TyxjaRysYO26ATXPnqGM5SV3atW4Vk": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "WebLambdaFunction"
            },
            "CodeSha256": "YnqusQzCOnyzJ2rzjwkOD0ZlwTVQ+mxS5BR6o2JeZT0="
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-nuxt-nitro",
            "ProtocolType": "HTTP"
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "WebLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "WebLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationWeb": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "WebLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteDefault": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "$default",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationWeb"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationWeb"
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-ap-northeast-3-561efd32-c539",
          "Export": {
            "Name": "sls-nuxt-nitro-dev-ServerlessDeploymentBucketName"
          }
        },
        "WebLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "WebLambdaVersionskx4xi6rwmSi1TyxjaRysYO26ATXPnqGM5SV3atW4Vk"
          },
          "Export": {
            "Name": "sls-nuxt-nitro-dev-WebLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-nuxt-nitro-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-nuxt-nitro-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}